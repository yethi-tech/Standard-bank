apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-tenjin-core
  labels:
    name: {{ .Release.Name }}-tenjin-core
spec:
  replicas: 1
  strategy:
    type: Recreate #This ensures old pod is deleted before new one starts
  selector:
    matchLabels:
      app: tenjin
  template:
    metadata:
      labels:
        app: tenjin
    spec:
      securityContext:
        runAsUser: 1000
        runAsNonRoot: true
        fsGroup: 1000
      containers:
        - name: tenjin-core
          image: acrugauatautomationtenjin.azurecr.io/yethitech/tenjin-enterprise:4.12.1_stanbic
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-configmaptenjin
          volumeMounts:
            - name: tenjin-data-volume
              mountPath: /root
            - name: tenjin-jwt-keys
              mountPath: /etc/tenjin/keys
              readOnly: true
          securityContext:
            allowPrivilegeEscalation: false
          resources:
            requests:
              cpu: "4"
              memory: "8Gi"
            limits:
              cpu: "4"
              memory: "8Gi"
      volumes:
        - name: tenjin-data-volume
          persistentVolumeClaim:
            claimName: tenjin-data-volume
        - name: tenjin-jwt-keys
          secret:
            secretName: tenjin-jwt-keys
      initContainers:
        - name: wait-for-dependencies
          image: busybox
          command:
            - "/bin/sh"
            - "-c"
            - >
              until nc -zv {{ .Release.Name }}-elasticsearch 9200 && nc -zv dbs-san-uga-nonprod-sharedpostgresmi.postgres.database.azure.com 5432; do
                echo "Waiting for dependencies to be available..."
                sleep 5
              done
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tenjin-data-volume
  labels:
    app: tenjin
  annotations:
    "helm.sh/resource-policy": "keep"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.tenjin.persistence.size | default "10Gi" }}
  storageClassName: {{ .Values.tenjin.persistence.storageClassName | default "managed-csi" }}
  volumeName: tenjin-pv
